An outline of the 15 steps to writing a roguelike from Rouge Basin.
See: http://www.roguebasin.com/index.php?title=How_to_Write_a_Roguelike_in_15_Steps

[X] Step 1 - Decide to write a game
[X] Step 2 - Hello world
[X] Step 3 - It is a boy!
[X] Step 4 - The map
[X] Step 6 - It is alive! Alive!
[ ] Step 7 - Interaction
    [X] Add stats for your creatures. A simplification of the ones you
        envisioned, probably.
    [X] Make the creatures notice each other -- bump, attack, etc. Gradually
        improve their AIS, so that they can chase the player.
    [ ] Create unit tests, globalize and comment:
        [X] actor.py
        [X] ai.py -- removed
        [X] creature.py
        [X] droog.py
        [X] engine.py
        [ ] message.py
        [ ] tile.py
        [ ] turn.py
        [X] ui.py
        [ ] world.py
    [ ] Refactor some things:
        [ ] Actor.act() should not care about dexterity
        [ ] Creature.act() should care about dexterity uniformly
        [ ] Actors should call their parent act functions. No need for act_func.
    [ ] Implement and test the combat system -- without equipment for now, just
        hardcode the values.
        [ ] Add a bite attack to the zombie.
        [ ] Add a melee attack to the hero.
[ ] Step 8 - Data files
    [ ] Move the creature, map features, etc. definitions to data files. Forget
        about scripting for now. If something cannot be moved -- just leave it
        for now.
[ ] Step 9 - Items
    [ ] Add ites. For start, just objects you can pick up -- no properties.
    [ ] Gradually give them properties, kinds, stats, etc.
    [ ] Implement inventory
    [ ] Implement picking up and dropping.
    [ ] Equipping and using (no effects yet)
    [ ] Also add stacking
    [ ] Containers (if you want them), etc?
[ ] Step 10 - Magic
    [ ] Add item effects.
    [ ] Add special monster attacks
    [ ] Add spells (abilities)
    [ ] Add items and monsters to test them.
[ ] Step 11 - Simple game
    [ ] Try to make a simple, hard-coded game.
    [ ] Play it and give it to your friends.
    [ ] Test the mechanics you have implemented so far.
    [ ] See if the game is fun.
    [ ] Change everything you need to change.
    [ ] Do not forget to test a lot.
    [ ] Always ask someone to test the game's 'fun factor', or test it yourself 
        after a while; it is hard to notice some things right away.
[ ] Step 12 - Levels
    [ ] Write your level generators.
    [ ] Add more monsters and items, with their effects, as needed.
[ ] Step 14 - Citizens
    [ ] Add NPCs, shopkeepers, and simple quests if you need them.
[ ] Step 15 - Free at last
    [ ] Start adding and testing all the 'unique' features you thought were so
        cool months (years?) ago, when you started the whole thing.
    [ ] Revise your opinions of them and see if they fit the game.
    [ ] Write your pet random plot generator, factions system, infinite
        wilderness generator, neural network AI, or other unique feature, since 
        you can now test it in a working game.

Other things to consider:

[ ] Do we need to store AIs in the World?